version: 2.1

orbs:
  azure-cli: circleci/azure-cli@1.2.0
  terraform: circleci/terraform@2.0.0

jobs:
  terraform_plan:
    steps:
      - checkout
      - run:
          name: Set Azure Environment Variables
          command: |
            echo 'export ARM_CLIENT_ID="${AZURE_CLIENT_ID}"' >> $BASH_ENV
            echo 'export ARM_CLIENT_SECRET="${AZURE_CLIENT_SECRET}"' >> $BASH_ENV
            echo 'export ARM_TENANT_ID="${AZURE_TENANT_ID}"' >> $BASH_ENV
            echo 'export ARM_SUBSCRIPTION_ID="${AZURE_SUBSCRIPTION_ID}"' >> $BASH_ENV
            source $BASH_ENV
      - run:
          name: Initialize Terraform
          command: terraform init
      - run:
          name: Terraform Plan
          command: terraform plan

  terraform_apply:
    docker:
      - image: mcr.microsoft.com/azure-cli
    steps:
      - checkout
      - run:
          name: Install Terraform
          command: |
            mkdir -p /usr/share/keyrings
            curl -fsSL https://apt.releases.hashicorp.com/gpg | gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg
            echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | tee /etc/apt/sources.list.d/hashicorp.list
            apt-get update && apt-get install terraform -y
      - run:
          name: Set Azure Environment Variables
          command: |
            echo 'export ARM_CLIENT_ID="${AZURE_CLIENT_ID}"' >> $BASH_ENV
            echo 'export ARM_CLIENT_SECRET="${AZURE_CLIENT_SECRET}"' >> $BASH_ENV
            echo 'export ARM_TENANT_ID="${AZURE_TENANT_ID}"' >> $BASH_ENV
            echo 'export ARM_SUBSCRIPTION_ID="${AZURE_SUBSCRIPTION_ID}"' >> $BASH_ENV
            source $BASH_ENV
      - run:
          name: Terraform Apply
          command: terraform apply

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - terraform_plan
      - hold_for_approval:
          type: approval
          requires:
            - terraform_plan
      - terraform_apply:
          requires:
            - hold_for_approval
